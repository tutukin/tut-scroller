{"version":3,"file":"tut-scroller.min.js","sources":["../../src/js/tutScrollerDirective.js"],"names":["angular","module","directive","$compile","$templateCache","PM","Scroller","link","scope","iElement","iAttrs","selectItem","target","item","element","_linkItems","collection","items","forEach","i","el","_getItemTemplate","addClass","wrapper","append","scroller","addItem","index","itemScope","$new","itemTemplate","find","viewport","windowWidth","width","getItemSize","showItemAt","hideItem","tutScrollerTemplate","get","defaultTemplateHtml","css","$watch","pointer","attachTo","clickThreshold","Math","floor","itemWidth","onmove","s","scroll","onclick","on","w","getMeanItemWidth","head","ceil","tail","autoscroll","Date","now","hasClass","left","removeClass","restrict","template"],"mappings":"AAAAA,QAAQC,OAAO,eAAeC,UAAU,eACvC,WAAY,iBAAkB,mBAAoB,WACnD,SAAUC,EAAUC,EAAgBC,EAAIC,GAGpC,QAASC,GAAMC,EAAOC,EAAUC,GA4B5B,QAASC,GAAYC,GACjB,GAAIC,GAAOb,QAAQc,QAAQF,GAAQJ,QAAQK,IAE3CL,GAAMG,YACFE,KAAOA,IAoBf,QAASE,KACL,GAAIC,GAAaR,EAAMS,SAEvBjB,SAAQkB,QAAQF,EAAY,SAAUH,EAAMM,GACxC,GAAIC,GAAKC,EAAiBR,EAAMM,EAChCC,GAAGE,SAAS,QACZC,EAAQC,OAAOJ,GACfK,EAASC,QAAQN,KAIzB,QAASC,GAAkBR,EAAMc,GAC7B,GAAIC,GAAYpB,EAAMqB,MAAK,EAC3BD,GAAUf,KAAOA,EACjBe,EAAUD,MAAQA,CAElB,IAAIP,GAAKjB,EAAS2B,GAAcF,EAEhC,OAAOR,GArEX,GAAIG,GAAUd,EAASsB,KAAK,UACxBC,EAAWvB,EAASsB,KAAK,WAEzBN,EAAW,GAAInB,GAASA,UACxB2B,YAAgBD,EAASE,QACzBC,YAAgBA,EAChBC,WAAgBA,EAChBC,SAAgBA,IAGhBP,EAAepB,EAAO4B,oBACtBlC,EAAemC,IAAI7B,EAAO4B,qBAC1BE,CAEJ/B,GAASa,SAAS,gBAClBb,EAASgC,IAAI,WAAY,YAEzBjC,EAAMkC,OAAO,QAAS,WAClB3B,KAGJ,IAAI4B,GAAUtC,EAAGuC,SAASrB,GACtBsB,eAAgBC,KAAKC,MAAM,IAAOvC,EAAMwC,YAAc,EACtDC,OAAQ,SAAiBC,GAAKzB,EAAS0B,OAAOD,IAC9CE,QAAQzC,GAWZF,GAASsB,KAAK,eAAesB,GAAG,QAAS,WACrC,GAAIC,GAAI7B,EAAS8B,mBACbC,EAAOV,KAAKW,KAAK,GAAIH,GACrBI,EAAOJ,EAAIE,CACf/B,GAAS0B,QAAQK,GACjBb,EAAQgB,YAAYD,EAAME,KAAKC,SAGnCpD,EAASsB,KAAK,gBAAgBsB,GAAG,QAAS,WACtC,GAAIC,GAAI7B,EAAS8B,mBACbC,EAAOV,KAAKW,KAAK,GAAIH,GACrBI,EAAOJ,EAAIE,CACf/B,GAAS0B,OAAOK,GAChBb,EAAQgB,WAAWD,EAAME,KAAKC,SA0BtC,QAASxB,GAAUjB,GACRA,EAAG0C,SAAS,WACf1C,EAAGE,SAAS,UAIpB,QAASc,GAAY2B,EAAM3C,GACvBA,EAAG4C,YAAY,UACf5C,EAAGqB,IAAI,OAAQ,GAAKsB,EAAO,MAG/B,QAAS5B,GAAaf,GAClB,MAAOA,GAAGc,QAzFd,GAAIM,GAAsB,kCA+F1B,QACIyB,SAAY,IACZ1D,KAAYA,EACZC,OACIS,MAAY,eACZN,WAAY,sBAEhBuD,SACI","sourcesContent":["angular.module('tutScroller').directive('tutScroller',\n['$compile', '$templateCache', 'PointerMovements', 'Scroller',\nfunction ($compile, $templateCache, PM, Scroller) {\n    var defaultTemplateHtml = '<div class=\"item\">{{item}}</div>';\n\n    function link (scope, iElement, iAttrs, controller, transcludeFn) {\n        var wrapper = iElement.find('.items');\n        var viewport = iElement.find('.window');\n\n        var scroller = new Scroller.Scroller({\n            windowWidth:    viewport.width(),\n            getItemSize:    getItemSize,\n            showItemAt:     showItemAt,\n            hideItem:       hideItem\n        });\n\n        var itemTemplate = iAttrs.tutScrollerTemplate ?\n            $templateCache.get(iAttrs.tutScrollerTemplate) :\n            defaultTemplateHtml;\n\n        iElement.addClass('tut-scroller');\n        iElement.css('position', 'relative');\n\n        scope.$watch('items', function (a, b) {\n            _linkItems();\n        });\n\n        var pointer = PM.attachTo(wrapper, {\n            clickThreshold: Math.floor(0.05 * scope.itemWidth) || 8, // Fixme: scope.itemWidth is not available right now\n            onmove: function _shift (s) { scroller.scroll(s); },\n            onclick:selectItem\n        });\n\n        function selectItem (target) {\n            var item = angular.element(target).scope().item;\n\n            scope.selectItem({\n                item : item\n            });\n        }\n\n        iElement.find('a.move-left').on('click', function (ev) {\n            var w = scroller.getMeanItemWidth();\n            var head = Math.ceil(0.5*w);\n            var tail = w - head;\n            scroller.scroll(-head);\n            pointer.autoscroll(-tail, Date.now());\n        });\n\n        iElement.find('a.move-right').on('click', function (ev) {\n            var w = scroller.getMeanItemWidth();\n            var head = Math.ceil(0.5*w);\n            var tail = w - head;\n            scroller.scroll(head);\n            pointer.autoscroll(tail, Date.now());\n        });\n\n        function _linkItems () {\n            var collection = scope.items || [];\n\n            angular.forEach(collection, function (item, i) {\n                var el = _getItemTemplate(item, i);\n                el.addClass('item');\n                wrapper.append(el);\n                scroller.addItem(el);\n            });\n        }\n\n        function _getItemTemplate (item, index) {\n            var itemScope = scope.$new(true);\n            itemScope.item = item;\n            itemScope.index = index;\n\n            var el = $compile(itemTemplate)(itemScope);\n\n            return el;\n        }\n    }\n\n\n    function hideItem (el) {\n        if ( ! el.hasClass('hidden') ) {\n            el.addClass('hidden');\n        }\n    }\n\n    function showItemAt (left, el) {\n        el.removeClass('hidden');\n        el.css('left', '' + left + 'px');\n    }\n\n    function getItemSize (el) {\n        return el.width();\n    }\n\n\n\n\n    return {\n        restrict:   'A',\n        link:       link,\n        scope:      {\n            items:      '=tutScroller',\n            selectItem: '&tutScrollerSelect'\n        },\n        template:\n            '<div class=\"window\">' +\n                '<div class=\"items\"></div>' +\n            '</div>' +\n            '<a href=\"#\" class=\"move-right\"></a>' +\n            '<a href=\"#\" class=\"move-left\"></a>'\n    };\n}]);\n"]}