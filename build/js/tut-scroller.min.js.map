{"version":3,"file":"tut-scroller.min.js","sources":["../../src/js/tutScroller.js","../../src/js/tutScrollerDirective.js","../../src/js/tutScrollerController.js"],"names":["angular","module","directive","$compile","$templateCache","compile","tElement","tAttrs","templateId","tutScrollerTemplate","link","scope","iElement","wrapper","find","window","addClass","css","windowWidth","width","contentWidth","currentShift","$watch","_linkItems","on","ev","which","origin","reference","pageX","maxShift","_stopEvent","_release","s","_shift","Math","abs","itemWidth","collection","items","forEach","item","i","el","_getItemTemplate","pos","_hide","_showAt","getX","append","floor","length","stopPropagation","preventDefault","type","selectItem","_getItemByElement","target","element","index","html","get","defaultTemplateHtml","itemScope","$new","hasClass","left","removeClass","each","$","this","translate","restrict","controller","template","$scope","shift","n","right"],"mappings":"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","sourcesContent":["angular.module('tutScroller', []);\n","angular.module('tutScroller').directive('tutScroller',\n['$compile', '$templateCache',\nfunction ($compile, $templateCache) {\n    var defaultTemplateHtml = '<div class=\"item\">{{item}}</div>';\n    var templateId;\n    var itemTemplate;\n\n    function compile (tElement, tAttrs) {\n        templateId = tAttrs.tutScrollerTemplate || null;\n        return link;\n    }\n\n    function link (scope, iElement, iAttrs, controller, transcludeFn) {\n        var wrapper = iElement.find('.items');\n        var window = iElement.find('.window');\n\n        iElement.addClass('tut-scroller');\n        iElement.css('position', 'relative');\n\n        // FIXME: jQuery dep: .width()\n        //Â default - to make unit tests work\n        scope.windowWidth = window.width() || 400;\n        scope.contentWidth = 0;\n        scope.currentShift = 0;\n\n        scope.$watch('items', function (a, b) {\n            _linkItems(scope, wrapper);\n        });\n\n        wrapper.on('mousedown', function (ev) {\n            if ( ev.which !== 1 ) {\n                return;\n            }\n\n            scope.origin = scope.reference = ev.pageX;\n            scope.maxShift = 0;\n\n            return _stopEvent(ev);\n        });\n\n        wrapper.on('mouseup', function (ev) {\n            return _release(iElement, scope, ev);\n        });\n\n        wrapper.on('mouseleave', function (ev) {\n            return _release(iElement, scope, ev);\n        });\n\n        wrapper.on('mousemove', function (ev) {\n            var s;\n\n            if ( scope.reference === null ) {\n                return;\n            }\n\n            _shift(iElement, scope, ev.pageX - scope.reference);\n            scope.reference = ev.pageX;\n\n            s = Math.abs(scope.reference - scope.origin);\n            scope.maxShift = s > scope.maxShift ?\n                s : scope.maxShift;\n\n            return _stopEvent(ev);\n        });\n\n        iElement.find('a.move-left').on('click', function (ev) {\n            _shift(iElement, scope, -scope.itemWidth);\n        });\n\n        iElement.find('a.move-right').on('click', function (ev) {\n            _shift(iElement, scope, scope.itemWidth);\n        });\n    }\n\n\n    function _linkItems (scope, wrapper) {\n        var collection = scope.items || [];\n\n        angular.forEach(collection, function (item, i) {\n            var el = _getItemTemplate(scope, item, i);\n            el.addClass('item');\n            scope.pos[i] = scope.contentWidth;\n            if ( scope.pos[i] >= scope.windowWidth ) {\n                _hide(el);\n            }\n            else {\n                _showAt(el, scope.getX(i));\n            }\n            // FIXME: .width() comes from jQuery. Use .css()\n            // FIXME: note, jqLite.css supports INLINE styles only!!!\n            scope.contentWidth += el.width();\n            wrapper.append(el);\n        });\n\n        scope.itemWidth = Math.floor(scope.contentWidth / collection.length);\n    }\n\n\n    function _stopEvent (ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        return false;\n    }\n\n    function _release(iElement, scope, ev) {\n        if ( scope.reference === null ) {\n            return;\n        }\n        if ( scope.maxShift < Math.floor(0.05 * scope.itemWidth) ) {\n            _shift(iElement, scope, scope.origin - scope.reference );\n            if ( ev.type === 'mouseup' ) {\n                scope.selectItem({\n                    item : _getItemByElement(scope, ev.target)\n                });\n            }\n        }\n        scope.reference = null;\n        return _stopEvent(ev);\n    }\n\n    function _getItemByElement (scope, el) {\n        var s = angular.element(el).scope();\n        return s.item;\n    }\n\n\n\n\n    function _getItemTemplate (scope, item, index) {\n        var html = typeof templateId === 'string' ?\n            $templateCache.get(templateId) : defaultTemplateHtml;\n\n        var itemScope = scope.$new(true);\n        itemScope.item = item;\n        itemScope.index = index;\n\n        var el = $compile(html)(itemScope);\n\n        return el;\n    }\n\n\n    function _hide (el) {\n        if ( ! el.hasClass('hidden') ) {\n            el.addClass('hidden');\n        }\n    }\n\n    function _showAt (el, left) {\n        el.removeClass('hidden');\n        el.css('left', '' + left + 'px');\n    }\n\n    function _shift (iElement, scope, s) {\n        iElement.find('.item').each( function (i) {\n            var el = $(this);\n            var left = scope.pos[i] = scope.translate(scope.pos[i] + s);\n            if ( left >= scope.windowWidth ) {\n                _hide(el);\n            }\n            else {\n                _showAt(el, left);\n            }\n        });\n    }\n\n\n\n    return {\n        restrict:   'A',\n        compile:    compile,\n        scope:      {\n            items:      '=tutScroller',\n            selectItem: '&tutScrollerSelect'\n        },\n        controller: 'tutScrollerController',\n        template:\n            '<div class=\"window\">' +\n                '<div class=\"items\"></div>' +\n            '</div>' +\n            '<a href=\"#\" class=\"move-right\"></a>' +\n            '<a href=\"#\" class=\"move-left\"></a>'\n    };\n}]);\n","angular.module('tutScroller').controller('tutScrollerController',[\n    '$scope',\n    function ($scope) {\n        $scope.shift    = 0;\n        $scope.pos      = [];\n        $scope.reference= null;\n\n        $scope.getX     = function getX (n) {\n            return $scope.pos[n] + $scope.shift;\n        };\n\n        $scope.translate= function move (s) {\n            var left = ($scope.shift + s) % $scope.contentWidth;\n            var right = left + $scope.itemWidth;\n\n            if ( left <= -$scope.itemWidth ) {\n                left += $scope.contentWidth;\n            }\n\n            if ( left < $scope.contentWidth && right > $scope.contentWidth ) {\n                left -= $scope.contentWidth;\n            }\n\n            return left;\n        };\n    }\n])\n"]}